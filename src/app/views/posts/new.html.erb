<h1>新規投稿</h1>
<!-- form_for部分 -->
<%= form_for(@post) do |f| %>

  <h4>タイトル</h4>
  <%= f.text_field :title %>

  <h4>カテゴリー</h4>
  <%= f.text_field :category %>

  <h4>本文</h4>
  <%= f.text_area :body %>

  <div class="drag-and-drop" id="red-box"><i class="fas fa-tshirt clip-others-barca-01" style="color: red;"></i></div>
  <div class="drag-and-drop" id="blue-box"><i class="fas fa-tshirt clip-others-barca-02" style="color: blue;"></i></div>
  <div class="drag-and-drop" id="yellow-box"><i class="fas fa-tshirt clip-others-barca-03" style="color: yellow;"></i></div>

  <div id="jquery-ui-draggable-wrap" class="ui-widget-content">
    <div id="jquery-ui-draggable" class="ui-widget-content">
        <p>ドラッグして<br />特定要素内だけ<br />移動できる<br />ボックス。</p>
    </div>
  </div>

  <%= f.submit '投稿' %>




<script>

jQuery( function() {
    jQuery( '#jquery-ui-draggable' ) . draggable( {
        containment: '#jquery-ui-draggable-wrap',
        scroll: false,
    } );
} );

  (function(){

    //要素の取得
    var elements = document.getElementsByClassName("drag-and-drop");

    //要素内のクリックされた位置を取得するグローバル（のような）変数
    var x;
    var y;

    //マウスが要素内で押されたとき、又はタッチされたとき発火
    for(var i = 0; i < elements.length; i++) {
        elements[i].addEventListener("mousedown", mdown, false);
        elements[i].addEventListener("touchstart", mdown, false);
    }

    //マウスが押された際の関数
    function mdown(e) {

        //クラス名に .drag を追加
        this.classList.add("drag");

        //タッチデイベントとマウスのイベントの差異を吸収
        if(e.type === "mousedown") {
            var event = e;
        } else {
            var event = e.changedTouches[0];
        }

        //要素内の相対座標を取得
        x = event.pageX - this.offsetLeft;
        y = event.pageY - this.offsetTop;

        //ムーブイベントにコールバック
        document.body.addEventListener("mousemove", mmove, false);
        document.body.addEventListener("touchmove", mmove, false);
    }

    //マウスカーソルが動いたときに発火
    function mmove(e) {

        //ドラッグしている要素を取得
        var drag = document.getElementsByClassName("drag")[0];

        //同様にマウスとタッチの差異を吸収
        if(e.type === "mousemove") {
            var event = e;
        } else {
            var event = e.changedTouches[0];
        }

        //フリックしたときに画面を動かさないようにデフォルト動作を抑制
        e.preventDefault();

        //マウスが動いた場所に要素を動かす
        drag.style.top = event.pageY - y + "px";
        drag.style.left = event.pageX - x + "px";

        //マウスボタンが離されたとき、またはカーソルが外れたとき発火
        drag.addEventListener("mouseup", mup, false);
        document.body.addEventListener("mouseleave", mup, false);
        drag.addEventListener("touchend", mup, false);
        document.body.addEventListener("touchleave", mup, false);

    }

    //マウスボタンが上がったら発火
    function mup(e) {
        var drag = document.getElementsByClassName("drag")[0];

        //ムーブベントハンドラの消去
        document.body.removeEventListener("mousemove", mmove, false);
        drag.removeEventListener("mouseup", mup, false);
        document.body.removeEventListener("touchmove", mmove, false);
        drag.removeEventListener("touchend", mup, false);

        //クラス名 .drag も消す
        drag.classList.remove("drag");
    }

})()
</script>

<% end %>